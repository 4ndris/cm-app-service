openapi: 3.0.1
info:
  title: OpenAPI definition
  description: >-
    This is a TV-Show content manager server application.
    It servers educational purposes only to practice and demonstrate.
  version: v1
servers:
  - url: http://localhost:8080
    description: Local machine (unsecure)
  - url: https://localhost:8443
    description: Local machine (secure - TLS)
tags:
  - name: show
    description: Movie and Series content manager
paths:
  /services/shows/{id}:
    get:
      tags:
      - show
      summary: Get show with a specific ID
      operationId: getShow
      parameters:
      - name: id
        in: path
        required: true
        example: aa4eb909-2d8d-4495-b1de-b3da9e2d4b2e
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Show'
              example:
                Abstract: "Harom esztendovel azutan, hogy Gotham..."
                AgeRating: 12
                AvailabilityFromUtcIso: '2019-12-21T23:00:00'
                BackgroundUrl: "https://m.media-amazon.com/images/M/V1_SX300.jpg"
                Cast: "Ruby Rose, Rachel Skarsten, Meagan Tandy"
                Category: SERIES
                Director: Marcos Siega
                EditedAbstract: "Harom esztendovel azutan, hogy Gotham"
                Genre: "horror"
                Id: tt8712204
                Name: Batwoman
                ProductionYear: 2019
                Seasons: 3

        "404":
          description: Show not found
          content: {}
        "400":
          description: Invalid ID supplied
          content: {}
        "405":
          description: Validation exception
          content: {}
    put:
      tags:
      - show
      summary: Update show for a given ID
      operationId: updateShow
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/Show'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Show'
        "404":
          description: Show not found
          content: { }
        "400":
          description: Invalid ID supplied
          content: { }
        "405":
          description: Validation exception
          content: { }
    delete:
      tags:
      - show
      summary: Delete show with a specific ID
      operationId: deleteShow
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
        "404":
          description: Show not found
          content: { }
        "400":
          description: Invalid ID supplied
          content: { }
        "405":
          description: Validation exception
          content: { }
  /services/shows:
    get:
      tags:
      - show
      summary: Get the list of shows (movies and series)
      operationId: listShows
      responses:
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Shows'
    post:
      tags:
      - show
      summary: Create a new show (movie or series)
      operationId: addShow
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Show'
        required: true
      responses:
        "201":
          description: Show created
          content: { }
        "400":
          description: Invalid request sent
          content: { }
        "409":
          description: Id already exist among items
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
  /:
    get:
      tags:
      - show
      summary: Welcome page
      operationId: welcome
      responses:
        "200":
          description: OK
          content:
            'text/plain':
              example: Welcome
              schema:
                type: string
components:
  schemas:
    Show:
      required:
      - Abstract
      - AgeRating
      - AvailabilityFromUtcIso
      - BackgroundUrl
      - Cast
      - Director
      - EditedAbstract
      - Genre
      - Id
      - Name
      - ProductionYear
      - Seasons
      type: object
      properties:
        Abstract:
          type: string
        AgeRating:
          maximum: 21
          minimum: 0
          type: integer
          format: int32
        AvailabilityFromUtcIso:
          type: string
          format: date-time
        BackgroundUrl:
          type: string
        Cast:
          type: string
        Category:
          type: string
          enum:
          - MOVIE
          - SERIES
        Director:
          type: string
        EditedAbstract:
          type: string
        Genre:
          type: string
        Id:
          type: string
        Name:
          type: string
        ProductionYear:
          minimum: 1874
          type: integer
          format: int32
        Seasons:
          maximum: 100
          minimum: 1
          type: integer
          format: int32
    Shows:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/Show'
    ErrorMessage:
      type: object
      properties:
        errors:
            type: string
        details:
            type: string
